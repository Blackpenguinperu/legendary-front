{"version":3,"sources":["containers/ui/ReactTableCards.js","views/app/ui/components/tables.js","data/products.js","components/DatatablePagination.js","containers/navs/Breadcrumb.js"],"names":["Table","columns","data","divided","defaultPageSize","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","prepareRow","headerGroups","page","canPreviousPage","canNextPage","pageCount","gotoPage","setPageSize","state","className","classnames","map","headerGroup","getHeaderGroupProps","headers","column","columnIndex","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","getRowProps","cells","cell","cellIndex","getCellProps","cellClass","DatatablePagination","pages","canPrevious","canNext","pageSizeOptions","showPageSizeOptions","showPageJump","onPageChange","p","onPageSizeChange","s","paginationMaxSize","ReactTableWithPaginationCard","cols","React","useMemo","Header","accessor","Cell","props","value","Card","CardBody","CardTitle","IntlMessages","id","products","ReactTableDivided","TablesUi","match","Row","xxs","Breadcrumb","heading","scope","striped","bordered","borderless","hover","responsive","produtcs","title","img","category","createDate","status","statusColor","description","sales","stock","total","DataTablePagination","useState","pageState","setPageState","useEffect","changePage","_page","Number","isNaN","Math","min","max","getSafePage","caret","color","size","direction","pageNumbers","i","push","onClick","renderPageJump","listClassName","disabled","totalPages","endPage","currentPage","startPage","maxSize","floor","pageButtons","active","renderPages","right","index","changePageSize","getMenuTitle","sub","adminRoot","getUrl","path","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","to","BreadcrumbContainer"],"mappings":"6QAeA,SAASA,EAAT,GAAyE,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,KAA8C,IAAxCC,eAAwC,aAAvBC,uBAAuB,MAAL,EAAK,EACtE,EAYIC,mBACF,CACEJ,UACAC,OACAI,aAAc,CAAEC,UAAW,EAAGC,SAAUJ,IAE1CK,YACAC,iBAlBAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,KACAC,EANF,EAMEA,gBACAC,EAPF,EAOEA,YACAC,EARF,EAQEA,UACAC,EATF,EASEA,SACAC,EAVF,EAUEA,YAVF,IAWEC,MAASd,EAXX,EAWWA,UAAWC,EAXtB,EAWsBA,SAWtB,OACE,qCACE,kDACMG,KADN,IAEEW,UAAS,wBAAmBC,IAAW,CAAE,gBAAiBpB,KAF5D,UAIE,gCACGW,EAAaU,KAAI,SAACC,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAACI,EAAQC,GAAT,OACvB,+CAEMD,EAAOE,eAAeF,EAAOG,yBAFnC,IAGET,UACEM,EAAOI,SACHJ,EAAOK,aACL,cACA,aACF,GARR,UAWGL,EAAOM,OAAO,UACf,4BAZF,aACaL,eAkBrB,iDAAWjB,KAAX,aACGG,EAAKS,KAAI,SAACW,GAET,OADAtB,EAAWsB,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMb,KAAI,SAACc,EAAMC,GAAP,OACb,8CAEMD,EAAKE,aAAa,CACpBlB,UAAWgB,EAAKV,OAAOa,aAH3B,aAMGH,EAAKJ,OAAO,UANf,aACaK,oBAczB,cAACG,EAAA,EAAD,CACE3B,KAAMR,EACNoC,MAAOzB,EACP0B,YAAa5B,EACb6B,QAAS5B,EACT6B,gBAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACrCC,qBAAqB,EACrBC,cAAc,EACd5C,gBAAiBI,EACjByC,aAAc,SAACC,GAAD,OAAO/B,EAAS+B,IAC9BC,iBAAkB,SAACC,GAAD,OAAOhC,EAAYgC,IACrCC,kBAAmBnC,OAMpB,IAAMoC,EAA+B,WAC1C,IAAMC,EAAOC,IAAMC,SACjB,iBAAM,CACJ,CACEC,OAAQ,OACRC,SAAU,QACVlB,UAAW,yBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,UAE5B,CACEJ,OAAQ,QACRC,SAAU,QACVlB,UAAW,kBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,UAE5B,CACEJ,OAAQ,QACRC,SAAU,QACVlB,UAAW,kBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,UAE5B,CACEJ,OAAQ,WACRC,SAAU,WACVlB,UAAW,kBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,aAG9B,IAGF,OACE,cAACC,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,6BAEnB,cAAC,EAAD,CAAOlE,QAASsD,EAAMrD,KAAMkE,YAMvBC,EAAoB,WAC/B,IAAMd,EAAOC,IAAMC,SACjB,iBAAM,CACJ,CACEC,OAAQ,OACRC,SAAU,QACVlB,UAAW,yBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,UAE5B,CACEJ,OAAQ,QACRC,SAAU,QACVlB,UAAW,mBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,UAE5B,CACEJ,OAAQ,QACRC,SAAU,QACVlB,UAAW,mBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,UAE5B,CACEJ,OAAQ,WACRC,SAAU,WACVlB,UAAW,mBACXmB,KAAM,SAACC,GAAD,OAAW,mCAAGA,EAAMC,aAG9B,IAEF,OACE,sBAAKxC,UAAU,OAAf,UACE,cAAC2C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,oBAEnB,cAAC,EAAD,CAAOlE,QAASsD,EAAMrD,KAAMkE,IAAUjE,SAAO,QCqHpCmE,UAlSE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,qCACE,cAACC,EAAA,EAAD,UACE,eAAC,IAAD,CAAOC,IAAI,KAAX,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,cAAcJ,MAAOA,IACzC,cAAC,IAAD,CAAWjD,UAAU,cAIzB,eAACkD,EAAA,EAAD,CAAKlD,UAAU,OAAf,UACE,cAAC,IAAD,CAAOmD,IAAI,KAAX,SACE,oBAAInD,UAAU,OAAd,SACE,cAAC4C,EAAA,EAAD,CAAcC,GAAG,+BAIrB,cAAC,IAAD,CAAOM,IAAI,IAAX,SACE,cAACV,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,4BAEnB,eAACnE,EAAA,EAAD,WACE,gCACE,+BACE,mCACA,4CACA,2CACA,+CAGJ,kCACE,+BACE,oBAAI4E,MAAM,MAAV,eACA,sCACA,sCACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,0DAQZ,cAAC,IAAD,CAAOH,IAAI,IAAX,SACE,cAACV,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,8BAGnB,eAACnE,EAAA,EAAD,CAAO6E,SAAO,EAAd,UACE,gCACE,+BACE,mCACA,4CACA,2CACA,+CAGJ,kCACE,+BACE,oBAAID,MAAM,MAAV,eACA,sCACA,sCACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,0DAQZ,cAAC,IAAD,CAAOH,IAAI,IAAX,SACE,cAACV,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,+BAEnB,eAACnE,EAAA,EAAD,CAAO8E,UAAQ,EAAf,UACE,gCACE,+BACE,mCACA,4CACA,2CACA,+CAGJ,kCACE,+BACE,oBAAIF,MAAM,MAAV,eACA,sCACA,sCACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,0DAQZ,cAAC,IAAD,CAAOH,IAAI,IAAX,SACE,cAACV,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,iCAEnB,eAACnE,EAAA,EAAD,CAAO+E,YAAU,EAAjB,UACE,gCACE,+BACE,mCACA,4CACA,2CACA,+CAGJ,kCACE,+BACE,oBAAIH,MAAM,MAAV,eACA,sCACA,sCACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,0DAQZ,cAAC,IAAD,CAAOH,IAAI,IAAX,SACE,cAACV,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,gCAEnB,eAACnE,EAAA,EAAD,CAAOgF,OAAK,EAAZ,UACE,gCACE,+BACE,mCACA,4CACA,2CACA,+CAGJ,kCACE,+BACE,oBAAIJ,MAAM,MAAV,eACA,sCACA,sCACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,0DAQZ,cAAC,IAAD,CAAOH,IAAI,IAAX,SACE,cAACV,EAAA,EAAD,CAAMzC,UAAU,OAAhB,SACE,eAAC0C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,GAAG,iCAGnB,eAACnE,EAAA,EAAD,CAAOiF,YAAU,EAAjB,UACE,gCACE,+BACE,mCACA,+CACA,+CACA,+CACA,+CACA,+CACA,oDAGJ,kCACE,+BACE,oBAAIL,MAAM,MAAV,eACA,4CACA,4CACA,4CACA,4CACA,4CACA,+CAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,4CACA,4CACA,4CACA,4CACA,4CACA,+CAEF,+BACE,oBAAIA,MAAM,MAAV,eACA,4CACA,4CACA,4CACA,4CACA,4CACA,+DASd,eAACJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,IAAI,KAAX,SACE,oBAAInD,UAAU,OAAd,SACE,cAAC4C,EAAA,EAAD,CAAcC,GAAG,2BAIrB,cAAC,IAAD,CAAOM,IAAI,KAAX,SACE,cAAC,EAAD,MAGF,eAAC,IAAD,CAAOA,IAAI,KAAX,UACE,cAAC,EAAD,IAAsB,e,iCClOjBS,IApEE,CACf,CACEf,GAAI,EACJgB,MAAO,iBACPC,IAAK,6CACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,qDACbC,MAAO,EACPC,MAAO,GACPC,MAAO,IAET,CACEzB,GAAI,EACJgB,MAAO,YACPC,IAAK,6CACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,qDACbC,MAAO,EACPC,MAAO,GACPC,MAAO,IAET,CACEzB,GAAI,EACJgB,MAAO,WACPC,IAAK,6CACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,qDACbC,MAAO,EACPC,MAAO,GACPC,MAAO,IAET,CACEzB,GAAI,EACJgB,MAAO,gBACPC,IAAK,6CACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,qDACbC,MAAO,EACPC,MAAO,EACPC,MAAO,GAET,CACEzB,GAAI,EACJgB,MAAO,UACPC,IAAK,6CACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,qDACbC,MAAO,EACPC,MAAO,GACPC,MAAO,M,2HCiHIC,IApKa,SAAC,GAYtB,IAXL9E,EAWI,EAXJA,KACA4B,EAUI,EAVJA,MACAC,EASI,EATJA,YACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,gBACAC,EAMI,EANJA,oBACAC,EAKI,EALJA,aACA5C,EAII,EAJJA,gBACA6C,EAGI,EAHJA,aACAE,EAEI,EAFJA,iBACAE,EACI,EADJA,kBAEA,EAAkCyC,mBAAS/E,GAA3C,mBAAOgF,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS1F,GAAzC,mBAAOI,EAAP,KAAiBY,EAAjB,KAEA6E,qBAAU,WACRD,EAAajF,KACZ,CAACA,IACJ,IAaMmF,EAAa,SAACC,GAClB,IAAMjD,EAdY,SAACiD,GACnB,IAAIjD,EAAIiD,EAIR,OAHIC,OAAOC,MAAMF,KACfjD,EAAInC,GAECuF,KAAKC,IAAID,KAAKE,IAAItD,EAAG,GAAIP,EAAQ,GAS9B8D,CAAYN,GAElBjD,IAAM6C,IACRC,EAAa9C,GACbD,EAAaC,KAmDjB,OACE,mCACE,sBAAK5B,UAAU,cAAf,UACG0B,GACC,sBAAK1B,UAAU,kBAAf,UACE,yCACA,eAAC,IAAD,CAAsBA,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBoF,OAAK,EAACC,MAAM,kBAAkBC,KAAK,KAAnD,SACGb,EAAY,IAEf,cAAC,IAAD,CAAcc,UAAU,OAAxB,SAtBW,WAErB,IADA,IAAMC,EAAc,GADO,WAElBC,GACPD,EAAYE,KACV,cAAC,IAAD,CAAsBC,QAAS,kBAAMf,EAAWa,IAAhD,SACGA,EAAI,GADYA,KAFdA,EAAI,EAAGA,EAAIpE,EAAOoE,GAAK,EAAI,EAA3BA,GAOT,OAAOD,EAamCI,QAElC,wCACCvE,KAIL,eAAC,IAAD,CACErB,UAAU,iBACVsF,KAAK,KACLO,cAAc,yBACd,aAAW,0BAJb,UAME,cAAC,IAAD,CAAgB7F,UAAS,WAAMsB,GAAe,YAA9C,SACE,cAAC,IAAD,CACEtB,UAAU,OACV2F,QAAS,WACFrE,GACLsD,EAAWnF,EAAO,IAEpBqG,UAAWxE,EANb,SAQE,mBAAGtB,UAAU,+BA3EL,WAClB,IAAM+F,EAAa1E,EACf2E,EAAU3E,EACR4E,EAAcxB,EAChByB,EAAY,EACVC,EAAUpE,EAEZoE,GACEH,EAAUG,KAEZH,GADAE,EAAYlB,KAAKE,IAAIe,EAAc,EAAIjB,KAAKoB,MAAMD,EAAU,GAAI,IAC1CA,EAAU,GAClBJ,IAEZG,GADAF,EAAUD,GACYI,EAAU,GAElCD,GAAa,GAKjB,IADA,IAAMG,EAAc,GAnBI,WAoBfZ,GACP,IAAMa,EAASL,IAAgBR,EAC/BY,EAAYX,KACV,cAAC,IAAD,CAAwBY,OAAQA,EAAhC,SACE,cAAC,IAAD,CAAgBX,QAAS,WA3B/Bf,EA2B+Ca,IAAzC,SAA8CA,EAAI,KAD/BA,KAHhBA,EAAIS,EAAWT,EAAIO,EAASP,GAAK,EAAI,EAArCA,GAQT,OAAOY,EAmDAE,GACD,cAAC,IAAD,CAAgBvG,UAAS,WAAMuB,GAAW,YAA1C,SACE,cAAC,IAAD,CACEvB,UAAU,OACV2F,QAAS,WACFpE,GACLqD,EAAWnF,EAAO,IAEpBqG,UAAWvE,EANb,SAQE,mBAAGvB,UAAU,mCAIlByB,GACC,sBAAKzB,UAAU,mBAAf,UACE,sBAAMA,UAAU,6BAAhB,oBACA,eAAC,IAAD,CAAsBA,UAAU,iBAAhC,UACE,cAAC,IAAD,CAAgBoF,OAAK,EAACC,MAAM,kBAAkBC,KAAK,KAAnD,SACGpG,IAEH,cAAC,IAAD,CAAcsH,OAAK,EAAnB,SACGhF,EAAgBtB,KAAI,SAACoF,EAAMmB,GAC1B,OACE,cAAC,IAAD,CAEEd,QAAS,kBA3HN,SAACL,GACtBzD,EAAiByD,GACjBxF,EAAYwF,GAyHqBoB,CAAepB,IAFhC,SAIGA,GAHImB,qB,gCClK3B,2DAOME,EAAe,SAACC,GACpB,MAAI,WAAIA,KAAUC,IAAkB,cAAC,IAAD,CAAchE,GAAG,cAC9C,cAAC,IAAD,CAAcA,GAAE,UAAK+D,MAGxBE,EAAS,SAACC,EAAMH,GACpB,OAAOG,EAAKC,MAAMJ,GAAK,GAAKA,GAgBxBK,EAAkB,SAAC,GAAe,IAChCF,EAD+B,EAAZ9D,MACN8D,KAAKG,OAAO,GAC3BC,EAAQJ,EAAKC,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAACC,GAAD,OAA2B,IAApBA,EAAEF,QAAQ,SAGtC,mCACE,cAAC,IAAD,CAAYrH,UAAU,gEAAtB,SACGmH,EAAMjH,KAAI,SAAC0G,EAAKH,GACf,OACE,cAAC,IAAD,CAA4BH,OAAQa,EAAMC,SAAWX,EAAQ,EAA7D,SACGU,EAAMC,SAAWX,EAAQ,EACxB,cAAC,IAAD,CAASe,GAAE,WAAMV,EAAOC,EAAMH,IAA9B,SACGD,EAAaC,KAGhBD,EAAaC,IANIH,WAgBlBgB,IAxCa,SAAC,GAAwB,IAAtBpE,EAAqB,EAArBA,QAASJ,EAAY,EAAZA,MACtC,OACE,qCACGI,GACC,6BACE,cAAC,IAAD,CAAcR,GAAIQ,MAGtB,cAAC4D,EAAD,CAAiBhE,MAAOA","file":"static/js/components-tables.44e2cdba.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-key */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/display-name */\nimport React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { useTable, usePagination, useSortBy } from 'react-table';\nimport classnames from 'classnames';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport DatatablePagination from 'components/DatatablePagination';\n\nimport products from 'data/products';\n\nfunction Table({ columns, data, divided = false, defaultPageSize = 6 }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    prepareRow,\n    headerGroups,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: defaultPageSize },\n    },\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <>\n      <table\n        {...getTableProps()}\n        className={`r-table table ${classnames({ 'table-divided': divided })}`}\n      >\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, columnIndex) => (\n                <th\n                  key={`th_${columnIndex}`}\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? 'sorted-desc'\n                        : 'sorted-asc'\n                      : ''\n                  }\n                >\n                  {column.render('Header')}\n                  <span />\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell, cellIndex) => (\n                  <td\n                    key={`td_${cellIndex}`}\n                    {...cell.getCellProps({\n                      className: cell.column.cellClass,\n                    })}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <DatatablePagination\n        page={pageIndex}\n        pages={pageCount}\n        canPrevious={canPreviousPage}\n        canNext={canNextPage}\n        pageSizeOptions={[4, 10, 20, 30, 40, 50]}\n        showPageSizeOptions={false}\n        showPageJump={false}\n        defaultPageSize={pageSize}\n        onPageChange={(p) => gotoPage(p)}\n        onPageSizeChange={(s) => setPageSize(s)}\n        paginationMaxSize={pageCount}\n      />\n    </>\n  );\n}\n\nexport const ReactTableWithPaginationCard = () => {\n  const cols = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'title',\n        cellClass: 'list-item-heading w-40',\n        Cell: (props) => <>{props.value}</>,\n      },\n      {\n        Header: 'Sales',\n        accessor: 'sales',\n        cellClass: 'text-muted w-10',\n        Cell: (props) => <>{props.value}</>,\n      },\n      {\n        Header: 'Stock',\n        accessor: 'stock',\n        cellClass: 'text-muted w-10',\n        Cell: (props) => <>{props.value}</>,\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n        cellClass: 'text-muted w-40',\n        Cell: (props) => <>{props.value}</>,\n      },\n    ],\n    []\n  );\n\n  return (\n    <Card className=\"mb-4\">\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"table.react-pagination\" />\n        </CardTitle>\n        <Table columns={cols} data={products} />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport const ReactTableDivided = () => {\n  const cols = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'title',\n        cellClass: 'list-item-heading w-40',\n        Cell: (props) => <>{props.value}</>,\n      },\n      {\n        Header: 'Sales',\n        accessor: 'sales',\n        cellClass: 'text-muted  w-10',\n        Cell: (props) => <>{props.value}</>,\n      },\n      {\n        Header: 'Stock',\n        accessor: 'stock',\n        cellClass: 'text-muted  w-10',\n        Cell: (props) => <>{props.value}</>,\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n        cellClass: 'text-muted  w-40',\n        Cell: (props) => <>{props.value}</>,\n      },\n    ],\n    []\n  );\n  return (\n    <div className=\"mb-4\">\n      <CardTitle>\n        <IntlMessages id=\"table.divided\" />\n      </CardTitle>\n      <Table columns={cols} data={products} divided />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Row, Card, CardBody, CardTitle, Table } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport {\n  ReactTableWithPaginationCard,\n  ReactTableDivided,\n} from 'containers/ui/ReactTableCards';\n\nconst TablesUi = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.tables\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <h3 className=\"mb-4\">\n            <IntlMessages id=\"table.bootstrap-tables\" />\n          </h3>\n        </Colxx>\n\n        <Colxx xxs=\"6\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"table.bootstrap-basic\" />\n              </CardTitle>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n\n        <Colxx xxs=\"6\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"table.bootstrap-striped\" />\n              </CardTitle>\n\n              <Table striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n\n        <Colxx xxs=\"6\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"table.bootstrap-bordered\" />\n              </CardTitle>\n              <Table bordered>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n\n        <Colxx xxs=\"6\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"table.bootstrap-borderless\" />\n              </CardTitle>\n              <Table borderless>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n\n        <Colxx xxs=\"6\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"table.bootstrap-hoverable\" />\n              </CardTitle>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n\n        <Colxx xxs=\"6\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"table.bootstrap-responsive\" />\n              </CardTitle>\n\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Table heading</th>\n                    <th>Table heading</th>\n                    <th>Table heading</th>\n                    <th>Table heading</th>\n                    <th>Table heading</th>\n                    <th>Table heading</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                    <td>Table cell</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row>\n        <Colxx xxs=\"12\">\n          <h3 className=\"mb-4\">\n            <IntlMessages id=\"table.react-tables\" />\n          </h3>\n        </Colxx>\n\n        <Colxx xxs=\"12\">\n          <ReactTableWithPaginationCard />\n        </Colxx>\n\n        <Colxx xxs=\"12\">\n          <ReactTableDivided />{' '}\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default TablesUi;\n","const produtcs = [\n  {\n    id: 1,\n    title: 'Administrative',\n    img: '/assets/img/products/marble-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '02.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 0,\n    stock: 10,\n    total: 10\n  },\n  {\n    id: 2,\n    title: 'Sous Chef',\n    img: '/assets/img/products/marble-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '02.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 0,\n    stock: 15,\n    total: 15\n  },\n  {\n    id: 3,\n    title: 'Houseman',\n    img: '/assets/img/products/marble-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '02.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 7,\n    stock: 10,\n    total: 17\n  },\n  {\n    id: 4,\n    title: 'Bar attendant',\n    img: '/assets/img/products/marble-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '02.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 0,\n    stock: 5,\n    total: 5\n  },\n  {\n    id: 5,\n    title: 'Janitor',\n    img: '/assets/img/products/marble-cake-thumb.jpg',\n    category: 'Cakes',\n    createDate: '02.04.2018',\n    status: 'ON HOLD',\n    statusColor: 'primary',\n    description: 'Wedding cake with flowers Macarons and blueberries',\n    sales: 0,\n    stock: 20,\n    total: 20\n  },\n];\n\nexport default produtcs;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n} from 'reactstrap';\n\nconst DataTablePagination = ({\n  page,\n  pages,\n  canPrevious,\n  canNext,\n  pageSizeOptions,\n  showPageSizeOptions,\n  showPageJump,\n  defaultPageSize,\n  onPageChange,\n  onPageSizeChange,\n  paginationMaxSize,\n}) => {\n  const [pageState, setPageState] = useState(page);\n  const [pageSize, setPageSize] = useState(defaultPageSize);\n\n  useEffect(() => {\n    setPageState(page);\n  }, [page]);\n  const getSafePage = (_page) => {\n    let p = _page;\n    if (Number.isNaN(_page)) {\n      p = page;\n    }\n    return Math.min(Math.max(p, 0), pages - 1);\n  };\n\n  const changePageSize = (size) => {\n    onPageSizeChange(size);\n    setPageSize(size);\n  };\n\n  const changePage = (_page) => {\n    const p = getSafePage(_page);\n\n    if (p !== pageState) {\n      setPageState(p);\n      onPageChange(p);\n    }\n  };\n\n  const pageClick = (pageIndex) => {\n    changePage(pageIndex);\n  };\n\n  const renderPages = () => {\n    const totalPages = pages;\n    let endPage = pages;\n    const currentPage = pageState;\n    let startPage = 0;\n    const maxSize = paginationMaxSize;\n\n    if (maxSize) {\n      if (endPage > maxSize) {\n        startPage = Math.max(currentPage + 1 - Math.floor(maxSize / 2), 1);\n        endPage = startPage + maxSize - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - maxSize + 1;\n        }\n        startPage -= 1;\n      }\n    }\n\n    const pageButtons = [];\n    for (let i = startPage; i < endPage; i += 1) {\n      const active = currentPage === i;\n      pageButtons.push(\n        <PaginationItem key={i} active={active}>\n          <PaginationLink onClick={() => pageClick(i)}>{i + 1}</PaginationLink>\n        </PaginationItem>\n      );\n    }\n    return pageButtons;\n  };\n\n  const renderPageJump = () => {\n    const pageNumbers = [];\n    for (let i = 0; i < pages; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => changePage(i)}>\n          {i + 1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n\n  return (\n    <>\n      <div className=\"text-center\">\n        {showPageJump && (\n          <div className=\"float-left pt-2\">\n            <span>Page </span>\n            <UncontrolledDropdown className=\"d-inline-block\">\n              <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\n                {pageState + 1}\n              </DropdownToggle>\n              <DropdownMenu direction=\"left\">{renderPageJump()}</DropdownMenu>\n            </UncontrolledDropdown>\n            <span> of </span>\n            {pages}\n          </div>\n        )}\n\n        <Pagination\n          className=\"d-inline-block\"\n          size=\"sm\"\n          listClassName=\"justify-content-center\"\n          aria-label=\"Page navigation example\"\n        >\n          <PaginationItem className={`${!canPrevious && 'disabled'}`}>\n            <PaginationLink\n              className=\"prev\"\n              onClick={() => {\n                if (!canPrevious) return;\n                changePage(page - 1);\n              }}\n              disabled={!canPrevious}\n            >\n              <i className=\"simple-icon-arrow-left\" />\n            </PaginationLink>\n          </PaginationItem>\n\n          {renderPages()}\n          <PaginationItem className={`${!canNext && 'disabled'}`}>\n            <PaginationLink\n              className=\"next\"\n              onClick={() => {\n                if (!canNext) return;\n                changePage(page + 1);\n              }}\n              disabled={!canNext}\n            >\n              <i className=\"simple-icon-arrow-right\" />\n            </PaginationLink>\n          </PaginationItem>\n        </Pagination>\n        {showPageSizeOptions && (\n          <div className=\"float-right pt-2\">\n            <span className=\"text-muted text-small mr-1\">Items </span>\n            <UncontrolledDropdown className=\"d-inline-block\">\n              <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\n                {pageSize}\n              </DropdownToggle>\n              <DropdownMenu right>\n                {pageSizeOptions.map((size, index) => {\n                  return (\n                    <DropdownItem\n                      key={index}\n                      onClick={() => changePageSize(size)}\n                    >\n                      {size}\n                    </DropdownItem>\n                  );\n                })}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default DataTablePagination;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}