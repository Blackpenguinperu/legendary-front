{"version":3,"sources":["views/app/companies/create-companie/FirstFormCompanies.js","views/app/companies/create-companie/SecondFormCompanies.js","views/app/companies/create-companie/TrFormCompanies.js","views/app/companies/create-companie/index.js","views/app/companies/view-companies/shortInformation.js","views/app/companies/view-companies/index.js","views/app/employees/view-employee/employeeShortInfo.js","views/app/employees/view-employee/index.js","helpers/services/urlServices.js","helpers/services/companyServices.js","helpers/services/employeesServices.js","views/app/events/create-event/firstFormEvents.js","views/app/events/create-event/secondFormEvents.js","views/app/events/create-event/index.js","views/app/employees/create-employee/formExperience.js","views/app/employees/create-employee/index.js","views/app/ui/forms/index.js","containers/navs/Breadcrumb.js","views/app/employees/details-employee/index.js","views/app/employees/edit-employee/index.js","views/app/employees/reports-employees/index.js","views/app/events/view-events/index.js","views/app/events/report-events/index.js","views/app/events/details-event/index.js"],"names":["FirstFormCompanies","props","changeStep","saveData","name","email","phone","Row","xxs","className","xl","InputGroup","size","Input","placeholder","defaultValue","onChange","target","value","type","Button","color","onClick","IntlMessages","id","SecondFormCompanies","InputGroupAddon","addonType","CustomInput","TrFormCompanies","saveCompanie","validateEmail","error","test","CreateCompanie","match","getCompanies","useState","nameCompanie","setNameCompanie","emailCompanie","setEmailCompanie","phoneCompanie","setPhoneCompanie","address","setAddress","state","setState","pinCode","setPincode","city","setCity","category","setCategory","title","setTitle","bussinessContactName","setBussinessContactName","bussinessContactPhone","setBussinessContactPhone","bussinessContactEmail","setBussinessContactEmail","apartmentName","setApartmentName","apartmentCategory","setApartmentCategory","apartmentAddress","setApartmentAddress","apartmentContactName","setApartmentContactName","apartmentContactPhone","setApartmentContactPhone","apartmentContactEmail","setApartmentContactEmail","emailBussinessContact","emailApartmentContact","errors","setErrors","dataValue","validation","step","setStep","stepNumber","normalizeData","pincode","contacts","apartments","site","contact","a","data","addCompanie","Steps","current","Item","ShortCompaniesInfo","id_companie","name_companie","city_companie","state_companie","pincode_companie","phone_companie","scope","ViewComapanies","companies","setCompanies","modal","setModal","getAllCompanies","console","log","useEffect","Breadcrumb","heading","Modal","isOpen","toggle","ModalBody","Table","striped","map","EmployeeShortInfo","name_employee","lastname_employee","phone_employee","email_employee","ssn_employee","ViewEmployees","employees","setEmployees","callToAllEmployees","getAllEmployees","allEmployees","getEmployees","URL","URLSERVICE","dataEvent","axios","method","url","getApartments","idCompanie","getContactsCompanie","getContactApartment","idApartment","addEmployee","FirstFormEvents","id_apartment","name_apartment","checked","Date","startDate","setStartDate","selected","date","CreateEvent","setIdCompanie","setNameOfEvent","setIdDepartment","setExistBeoNumber","setBeoNumber","setUseContactForApartment","setIdContact","setContactName","setContactPhoneNumber","setDescription","setHowEnterLocation","setApartments","setContacts","callAllCompanies","callApartmentsForCompanie","dataApartments","callContactsForCompanie","departmentContacts","dataContacts","newContacts","callContactsForApartment","dataContactForApartment","nameEvent","existBeoNumber","beoNumber","useContactForApartment","idContact","contactName","contactPhone","description","HowEnterLocation","FormExperience","idExperience","deleteExperience","EmployeesForm","setName","lastname","setLastname","setEmail","setPhone","role","setRole","skillLevel","setSkillLevel","experience","setExperience","ssn","setSsn","zipCode","setZipCode","perHourCharges","setPerHourCharges","martialStatus","setMartialStatus","gender","setGender","haveADependents","setHaveADependents","dateBirth","setDateBirth","englishLevel","setEnglishLevel","dateOfHiring","setDateOfHiring","healtInsurance","setHealtInsurance","experienceInCompanies","setExperienceInCompanies","dependensMinors","setDependensMinors","dependensMayors","setDependensMayors","emergency_contact_name","setEmergencyContactName","emergency_contact_phone","setEmergencyContactPhone","sendData","setSendData","setIdExperience","undefined","validationOfEmail","setValidationOfEmail","setErros","healthInsurance","emergencyContactName","emergencyContactPhone","newExperienceInCompanies","indexOfExperience","indexOf","splice","normalizeDate","getDate","getDay","getMonth","getYear","getFullYear","saveEmployee","newEmployee","address_employee","role_employee","skill_level","city_employee","zip_code","per_hour_charge","martial_status","date_of_birth","haveDependents","organizations","validateDisabledRoles","disabledRoles","disabled","checkedRole","checkedDependents","formOne","formTwo","newIdExperience","newExperience","organizationName","organizationAddress","from","to","iAmStillWorkingHere","Components","React","lazy","Layouts","Validations","Wizard","Forms","fallback","exact","path","render","getMenuTitle","sub","adminRoot","getUrl","split","BreadcrumbItems","substr","paths","length","filter","x","index","active","BreadcrumbContainer","DetailsEmployee","EditEmployee","window","location","href"],"mappings":"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","file":"static/js/ui-forms.94f3ca92.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, InputGroup, Input, Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nfunction FirstFormCompanies(props){\n    const {\n        changeStep, \n        saveData,\n        name,\n        email,\n        phone,\n    } = props;\n    return(\n        <Row>\n            <Colxx xxs=\"12\" className=\"mb-4\">\n                <Row>\n\n                    <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Company Name\" defaultValue={name} onChange={({target})=> saveData(target.value,\"nameCompanie\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Email Id\" defaultValue={email} onChange={({target})=> saveData(target.value,\"emailCompanie\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Phone\" type=\"number\" defaultValue={phone} onChange={({target})=> saveData(target.value,\"phoneCompanie\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Address\" onChange={({target})=> saveData(target.value,\"address\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"State\" onChange={({target})=> saveData(target.value,\"state\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Pincode\" onChange={({target})=> saveData(target.value,\"pinCode\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"City\" onChange={({target})=> saveData(target.value,\"city\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input type=\"select\" placeholder=\"Companies Category\" onChange={({target})=> saveData(target.value,\"category\")}>\n                                <option value=\"\">Category</option>\n                                <option>FRONT OF THE HOUSE</option>\n                                <option>BACK OF THE HOUSE</option>\n                            </Input>\n                        </InputGroup>\n                    </Colxx>\n                </Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <Button color=\"success\" className=\"mb-2\" onClick={()=>changeStep(1)}>\n                        <IntlMessages id=\"Next\" />\n                    </Button>\n                </Colxx>\n            </Colxx>\n        </Row>\n    )\n}\n\nexport default FirstFormCompanies;","import React from \"react\";\nimport { Row, InputGroup, Input, Button, InputGroupAddon, CustomInput} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nfunction SecondFormCompanies({changeStep, saveData}){\n    return(\n        <Row>\n            <Colxx xxs=\"12\" className=\"mb-4\">\n                <Row>\n\n                    <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Title\" onChange={({target})=> saveData(target.value,\"title\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Bussines Contact Person Name\" onChange={({target})=> saveData(target.value,\"bussinessContactName\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Bussines Contact Phone\" onChange={({target})=> saveData(target.value,\"bussinessContactPhone\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Bussiness Contact Email\" onChange={({target})=> saveData(target.value,\"bussinessContactEmail\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Apartment Name\" onChange={({target})=> saveData(target.value,\"apartmentName\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Apartment Category\" onChange={({target})=> saveData(target.value,\"apartmentCategory\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Apartment Address.\" onChange={({target})=> saveData(target.value,\"apartmentAddress\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Apartment Contact Person Name\" onChange={({target})=> saveData(target.value,\"apartmentName\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Aparment Contact Person Phone\" onChange={({target})=> saveData(target.value,\"apartmentContactPhone\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input placeholder=\"Apartment Contact Person Email\" onChange={({target})=> saveData(target.value,\"apartmentContactEmail\")}/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup className=\"mb-3\">\n                            <InputGroupAddon addonType=\"prepend\">Incorporation Document</InputGroupAddon>\n                            <CustomInput\n                            type=\"file\"\n                            id=\"exampleCustomFileBrowser1\"\n                            name=\"customFile\"\n                            />\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup className=\"mb-3\">\n                            <InputGroupAddon addonType=\"prepend\">Irs Document</InputGroupAddon>\n                            <CustomInput\n                            type=\"file\"\n                            id=\"exampleCustomFileBrowser1\"\n                            name=\"customFile\"\n                            />\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup className=\"mb-3\">\n                            <InputGroupAddon addonType=\"prepend\">Upload Businnes Logo</InputGroupAddon>\n                            <CustomInput\n                            type=\"file\"\n                            id=\"exampleCustomFileBrowser1\"\n                            name=\"customFile\"\n                            />\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                        <InputGroup className=\"mb-3\">\n                            <InputGroupAddon addonType=\"prepend\">Upload Profile Picture</InputGroupAddon>\n                            <CustomInput\n                            type=\"file\"\n                            id=\"exampleCustomFileBrowser1\"\n                            name=\"customFile\"\n                            />\n                        </InputGroup>\n                    </Colxx>\n                </Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <Button color=\"danger\" className=\"mb-2\" onClick={()=>changeStep(0)}>\n                        <IntlMessages id=\"Back\" />\n                    </Button>\n                    <Button color=\"success\" className=\"mb-2\" onClick={()=>changeStep(2)}>\n                        <IntlMessages id=\"Next\" />\n                    </Button>\n                </Colxx>\n            </Colxx>\n        </Row>\n    )\n}\n\nexport default SecondFormCompanies;","import React from \"react\";\nimport { Row, InputGroup, Input, Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nfunction TrFormCompanies({changeStep, saveCompanie}){\n    return(\n        <Row>\n            <Colxx xxs=\"12\" className=\"mb-4\">\n                <Row>\n                    <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                        Per Hour Charges\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            Administrative\n                            <Input placeholder=\"Administrative\"/>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            Sous Chef\n                            <Input placeholder=\"Sous Chef\"/>\n                        </InputGroup>\n                    </Colxx>\n                </Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                <Button color=\"danger\" className=\"mb-2\" onClick={()=>changeStep(1)}>\n                        <IntlMessages id=\"Back\" />\n                    </Button>\n                    <Button color=\"success\" className=\"mb-2\" onClick={saveCompanie}>\n                        <IntlMessages id=\"Save\" />\n                    </Button>\n                </Colxx>\n            </Colxx>\n        </Row>\n    )\n}\n\nexport default TrFormCompanies;","import React, {useState} from 'react';\nimport { Row} from 'reactstrap';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport FirstFormCompanies from './FirstFormCompanies';\nimport SecondFormCompanies from './SecondFormCompanies';\nimport TrFormCompanies from './TrFormCompanies';\nimport { Steps } from 'rsuite';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addCompanie } from 'helpers/services/companyServices';\n\nconst validateEmail = (value) => {\n    let error;\n    if (!value) {\n      error = 'Please enter your email address';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n    return error;\n  };\n\n\nconst CreateCompanie = ({ match, getCompanies }) => {\n    const [nameCompanie, setNameCompanie] = useState(\"\");\n    const [emailCompanie, setEmailCompanie] = useState(\"\");\n    const [phoneCompanie, setPhoneCompanie] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [pinCode, setPincode] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [title,setTitle] = useState(\"\");\n    const [bussinessContactName, setBussinessContactName] = useState(\"\");\n    const [bussinessContactPhone, setBussinessContactPhone] = useState(\"\");\n    const [bussinessContactEmail, setBussinessContactEmail] = useState(\"\");\n    const [apartmentName, setApartmentName] = useState(\"\");\n    const [apartmentCategory, setApartmentCategory] = useState(\"\");\n    const [apartmentAddress,setApartmentAddress] = useState(\"\");\n    const [apartmentContactName, setApartmentContactName] = useState(\"\");\n    const [apartmentContactPhone, setApartmentContactPhone] = useState(\"\");\n    const [apartmentContactEmail, setApartmentContactEmail] = useState(\"\");\n    const [perHourCharges, setPerHourCharges] = useState([]);\n    const [errors, setErrors] = useState({\n        emailCompanie: \"\",\n        emailBussinessContact: \"\",\n        emailApartmentContact: \"\",\n    });\n\n    const saveData = (dataValue, type) => {\n        const typeData = {\n            nameCompanie: value => setNameCompanie(value),\n            emailCompanie: value => {\n                setEmailCompanie(value)\n                const validation = validateEmail(value);\n                if(validation) {\n                    setErrors({\n                        ...errors,\n                        emailCompanie: validation,\n                    })\n                } else {\n                    setErrors({\n                        ...errors,\n                        emailCompanie: \"\",\n                    })\n                }\n            },\n            phoneCompanie: value => setPhoneCompanie(value),\n            address: value => setAddress(value),\n            state: value => setState(value),\n            pinCode: value => setPincode(value),\n            city: value => setCity(value),\n            category: value => setCategory(value),\n            title: value => setTitle(value),\n            bussinessContactName: value => setBussinessContactName(value),\n            bussinessContactPhone: value=> setBussinessContactPhone(value),\n            bussinessContactEmail: value => {\n                setBussinessContactEmail(value);\n                const validation = validateEmail(value);\n                if(validation) {\n                    setErrors({\n                        ...errors,\n                        emailBussinessContact: validation,\n                    })\n                } else {\n                    setErrors({\n                        ...errors,\n                        emailBussinessContact: \"\",\n                    })\n                }\n            },\n            apartmentName: value => setApartmentName(value),\n            apartmentCategory: value => setApartmentCategory(value),\n            apartmentAddress: value => setApartmentAddress(value),\n            apartmentContactName: value => setApartmentContactName(value),\n            apartmentContactPhone: value => setApartmentContactPhone(value),\n            apartmentContactEmail: value => {\n                setApartmentContactEmail(value)\n                const validation = validateEmail(value);\n                if(validation) {\n                    setErrors({\n                        ...errors,\n                        emailApartmentContact: validation,\n                    })\n                } else {\n                    setErrors({\n                        ...errors,\n                        emailApartmentContact: \"\",\n                    })\n                }\n            },\n\n        }\n        typeData[type](dataValue);\n    }\n\n    const [step, setStep] = useState(0);\n\n    const changeStep = (stepNumber)=>{\n        setStep(stepNumber);\n    }\n\n    const normalizeData = () => {\n        const dataNormalized = {\n            name: nameCompanie,\n            email: emailCompanie,\n            phone: phoneCompanie,\n            state: state,\n            pincode: pinCode,\n            city,\n            address,\n            category,\n            title,\n            contacts: [\n                {\n                    name: bussinessContactName,\n                    phone: bussinessContactPhone,\n                    email: bussinessContactEmail,\n                }\n            ],\n            apartments: [\n                {\n                        \n                    name: apartmentName,\n                    category: apartmentCategory,\n                    site: apartmentAddress,\n                    contact: {\n                        name: apartmentContactName,\n                        phone: apartmentContactPhone,\n                        email: apartmentContactEmail\n                    }\n                }\n            ]\n        };\n        return dataNormalized;\n    }\n\n    const saveCompanie = async () => {\n        const data = normalizeData();\n        const response = await addCompanie(data);\n        await getCompanies();\n    }\n  return (\n    <>\n        <Row>\n            <Colxx xxs=\"12\">\n                <Steps current={step}>\n                    <Steps.Item />\n                    <Steps.Item />\n                    <Steps.Item />\n                </Steps>\n              <Separator className=\"mb-5\" />\n            </Colxx>\n        </Row>\n        {step === 0 && (\n            <FirstFormCompanies changeStep={changeStep} saveData={saveData} errors={errors} {...normalizeData()}/>\n        )}\n        {step === 1 && (\n            <SecondFormCompanies changeStep={changeStep} saveData={saveData} errors={errors} {...normalizeData()}/>\n        )}\n        {step === 2 && (\n            <TrFormCompanies \n                changeStep={changeStep} \n                saveData={saveData} \n                saveCompanie={saveCompanie} \n                errors={errors}\n                {...normalizeData()}/>\n        )}\n    </>\n  );\n};\n\nexport default CreateCompanie;\n","import React from \"react\";\nimport { Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\nfunction ShortCompaniesInfo(props) {\n    const { \n        id_companie, \n        name_companie, \n        category, \n        city_companie, \n        state_companie, \n        pincode_companie, \n        phone_companie\n    } = props;\n    return (\n        <tr>\n            <th scope=\"row\">{id_companie}</th>\n            <td>{name_companie}</td>\n            <td>{category}</td>\n            <td>{city_companie}</td>\n            <td>{state_companie}</td>\n            <td>{pincode_companie}</td>\n            <td>{phone_companie}</td>\n            <td>\n                <Button color=\"success\" className=\"mb-2\">\n                    <IntlMessages id=\"View Details\" />\n                </Button>\n                <Button color=\"success\" className=\"mb-2\" >\n                    <IntlMessages id=\"Edit\" />\n                </Button>\n            </td>\n        </tr>\n    )\n}\n\nexport default ShortCompaniesInfo;","import React, {useEffect, useState} from 'react';\nimport { Row, Table,Button, Modal, ModalBody} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport CreateCompanie from \"../create-companie\";\nimport ShortCompaniesInfo from './shortInformation';\nimport { getAllCompanies } from 'helpers/services/companyServices';\nconst ViewComapanies = ({ match }) => {\n\tconst [companies, setCompanies] = useState([]);\n    const [modal, setModal] = useState(false);\n\tconst sendToDetails = () => {\n\t\twindow.location.href = \"/app/employees/details\"\n\t}\n\tconst sendToEditEmployee = ()=>{\n\t\twindow.location.href = \"/app/employees/edit\";\n\t}\n\n\tconst getCompanies = async () => {\n\t\ttry {\n\t\t\tconst companies = await getAllCompanies();\n\t\t\tif(companies) {\n\t\t\t\tsetCompanies(companies.data);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(\"ERR GET COMPANIES => \", err);\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\t\t(async () => await getCompanies())()\n\t},[])\n  return (\n\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"Companies\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n\t\t\t\t<Button color=\"success\" className=\"mb-2\"  onClick={() => setModal(true)}>\n\t\t\t\t\t<IntlMessages id=\"+ Add Companie\" />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"success\" className=\"mb-2\">\n\t\t\t\t\t<IntlMessages id=\"View Reports\" />\n\t\t\t\t</Button>\n            </Colxx>\n      </Row>\n        <Modal\n            isOpen={modal}\n            toggle={() => setModal(!modal)}\n        >\n                <ModalBody>\n                    <CreateCompanie getCompanies={getCompanies}/>\n                </ModalBody>\n        </Modal>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Table striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Category</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Pincode</th>\n                    <th>Phone</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n\t\t\t\t\t{companies.map((data) => <ShortCompaniesInfo {...data} />)}\n                </tbody>\n              </Table>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default ViewComapanies;\n","import React from \"react\";\nimport { Button } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\n\n\nfunction EmployeeShortInfo (props) {\n    const { name_employee, lastname_employee, phone_employee, email_employee, ssn_employee} = props;\n    return (\n        <tr>\n            <th scope=\"row\">#</th>\n            <td>{name_employee}</td>\n            <td>{lastname_employee}</td>\n            <td>{email_employee}</td>\n            <td>{phone_employee}</td>\n            <td>{ssn_employee}</td>\n            <td>\n                <Button color=\"success\" className=\"mb-2\" onClick={()=>{}}>\n                    <IntlMessages id=\"View Details\" />\n                </Button>\n                <Button color=\"success\" className=\"mb-2\" onClick={()=>{}}>\n                    <IntlMessages id=\"Edit\" />\n                </Button>\n            </td>\n        </tr>\n        )\n    }\n    \n    export default EmployeeShortInfo","import React, { useEffect, useState } from 'react';\nimport { Row, Table,Button, Modal, ModalBody } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport CreateEmploye from '../create-employee';\nimport EmployeeShortInfo from './employeeShortInfo';\nimport { getAllEmployees } from 'helpers/services/employeesServices';\nconst ViewEmployees = ({ match }) => {\n\tconst [employees, setEmployees] = useState([]);\n\tconst [modal, setModal] = useState(false);\n\tconst callToAllEmployees = async () => {\n\t\tconst allEmployees = await getAllEmployees();\n\t\t\tif (allEmployees) {\n\t\t\t\tsetEmployees(allEmployees.data);\n\t\t\t}\n\t}\n\tuseEffect(() => {\n\t\t(async ()=> {\n\t\t\tawait callToAllEmployees();\n\t\t})();\n\t},[])\n\n\tconst sendToDetails = () => {\n\t\twindow.location.href = \"/app/employees/details\"\n\t}\n\tconst sendToEditEmployee = ()=>{\n\t\twindow.location.href = \"/app/employees/edit\";\n\t}\n  return (\n    <>\n\t\t<Row>\n\t\t\t<Colxx xxs=\"12\">\n\t\t\t\t<Breadcrumb heading=\"menu.employees\" match={match} />\n\t\t\t\t<Separator className=\"mb-5\" />\n\t\t\t</Colxx>\n\t\t</Row>\n\t\t<Row>\n\t\t\t\t<Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n\t\t\t\t\t<Button color=\"success\" className=\"mb-2\" onClick={()=> setModal(true)}>\n\t\t\t\t\t\t<IntlMessages id=\"+ Add Employee\" />\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button color=\"success\" className=\"mb-2\">\n\t\t\t\t\t\t<IntlMessages id=\"View Reports\" />\n\t\t\t\t\t</Button>\n\t\t\t\t</Colxx>\n\t\t</Row>\n\t\t\t<Modal\n\t\t\t\tisOpen={modal}\n\t\t\t\tsize=\"lg\"\n\t\t\t\ttoggle={() => setModal(!modal)}\n\t\t\t>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<CreateEmploye \n\t\t\t\t\t\tsetEmployees={setEmployees} \n\t\t\t\t\t\temployees={employees} \n\t\t\t\t\t\tgetEmployees={callToAllEmployees}\n\t\t\t\t\t/>\n\t\t\t\t</ModalBody>\n\t\t\t</Modal>\n\t\t<Row>\n\t\t\t<Colxx xxs=\"12\" className=\"mb-4\">\n\t\t\t\t<Table striped>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t\t<th>First Name</th>\n\t\t\t\t\t\t\t<th>Last Name</th>\n\t\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t\t<th>Phone</th>\n\t\t\t\t\t\t\t<th>SSN</th>\n\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{employees.map((data)=> <EmployeeShortInfo {...data} />)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</Colxx>\n\t\t</Row>\n    </>\n  );\n};\n\nexport default ViewEmployees;\n","const URL = \"54.183.246.192:9000\";\nexport default URL;","import axios from 'axios';\nimport URLSERVICE from \"./urlServices\";\nconst URL = `http://${URLSERVICE}/api/v1/companies`;\n\nexport const addCompanie = async (dataEvent) => {\n    try{\n        const data = await axios({\n            method: \"POST\",\n            url: `${URL}/create`,\n            data: dataEvent\n        })\n        return data.data;\n    }catch(err){\n        console.error(\"ERR CALL BACK\", err);\n    }\n}\n\nexport const editCompanie = async () => {\n    try{\n\n    }catch(err){\n        console.error(\"ERR CALL BACK\", err);\n    }\n}\n\nexport const getOneCompanie = async () => {\n    try{\n\n    }catch(err){\n\n    }\n}\n\nexport const getAllCompanies = async () => {\n    try{\n        const data = await axios({\n            method: \"GET\",\n            url: `${URL}/view/all`\n        });\n        return data.data;\n    }catch(err){\n        console.log(\"ERR CALL GET ALL COMPANIES => \", err);\n    }\n}\n\nexport const getApartments = async (idCompanie) => {\n    try {\n        const data = await axios({\n            method: \"GET\",\n            url: `${URL}/get/aparments?idCompanie=${idCompanie}`\n        });\n        return data.data;\n    } catch (err) {\n        console.log(\"ERR CALL APARTMENTS => \", err);\n    }\n}\n\nexport const getContactsCompanie = async (idCompanie) => {\n    try { \n        const data = await axios({\n            method: \"GET\",\n            url: `${URL}/get/contacts?type=companie&id=${idCompanie}`\n        })\n        return data.data\n    } catch (err) {\n        console.log(\"ERR CALL GET CONTACTS FOR COMPANIE => \", err);\n    }\n}\n\nexport const getContactApartment = async (idApartment) => {\n    try {\n        const data = await axios({\n            method: \"GET\",\n            url: `${URL}/get/contacts?type=apartment&id=${idApartment}`\n        })\n        return data.data\n    } catch (err) {\n        console.log(\"ERR CALL GET CONTACTS FOR APARTMENT => \", err);\n    }\n}","import axios from 'axios';\nimport URLSERVICE from \"./urlServices\";\nconst URL = `http://${URLSERVICE}/api/v1/employees`;\n\nexport const addEmployee = async (dataEvent) => {\n    try{\n        const data = await axios({\n            method: \"POST\",\n            url: `${URL}/create`,\n            data: dataEvent\n        })\n        return data.data;\n    }catch(err){\n        console.error(\"ERR CALL BACK\", err);\n    }\n}\n\nexport const editEmployee = async () => {\n    try{\n\n    }catch(err){\n        console.error(\"ERR CALL BACK\", err);\n    }\n}\n\nexport const getOneEmployee = async () => {\n    try{\n\n    }catch(err){\n\n    }\n}\n\nexport const getAllEmployees = async () => {\n    try{\n        const data = await axios({\n            method: \"GET\",\n            url: `${URL}/view/all`,\n        });\n        return data.data;\n    }catch(err){\n        console.log(\"ERR CALL API => \",err);\n        return false;\n    }\n}","import React from \"react\";\nimport { Row, InputGroup, Input, Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nfunction FirstFormEvents(props){\n    const { changeStep, companies, saveData, apartments } = props;\n    return (\n        <Row>\n        <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n            <Row>\n            \n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"Companies Selection\" onChange={({target}) => saveData(target.value,\"idCompanie\")}>\n                            <option value=\"\">Select Companie</option>\n                            {companies.map(data => <option value={data.id_companie}>{data.name_companie}</option>)}\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Name of the event\" onChange={({target}) => saveData(target.value,\"nameEvent\")}/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"Department selection\" onChange={({target}) => saveData(target.value,\"idApartment\")}>\n                            <option value=\"\">Select Department</option>\n                            {apartments.map((data)=> <option value={data.id_apartment}>{data.name_apartment}</option>)}\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"checkbox\" aria-label=\"Exist BEO number?\" onChange={({target}) => {\n                            if (target.checked) {\n                                saveData(true,\"beoNumber\");\n                            } else {\n                                saveData(false,\"beoNumber\");\n                            }\n                        }\n                            }/>\n                        Exist BEO number?\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Beo Number\" onChange={({target}) => saveData(target.value,\"beoNumber\")}/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Contact Name\" onChange={({target}) => saveData(target.value,\"idApartment\")}/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Contact phone number\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Description\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <Button color=\"success\" className=\"mb-2\" onClick={changeStep}>\n                        <IntlMessages id=\"Next\" />\n                    </Button>\n                </Colxx>\n            </Row>\n        </Colxx>\n      </Row>\n    )\n}\n\nexport default FirstFormEvents;","import React, { useState } from \"react\";\nimport { Row, InputGroup, Input, Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction FirstFormEvents(){\n    const [startDate, setStartDate] = useState(new Date());\n    return (\n        <Row>\n        <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n            <Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"How to Enter Location\">\n                            <option value=\"\">Select How to Enter Location</option>\n                            <option>Lawn</option>\n                            <option>Lobby</option>\n                            <option>Back door and ring bell</option>\n                            <option>Back door</option>\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"Choose Role\">\n                            <option value=\"\">Select Role</option>\n                            <option>Administrative</option>\n                            <option>Sous Chef</option>\n                            <option>Houseman</option>\n                            <option>Bar attendant</option>\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"number\" placeholder=\"No. of Users\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"Select Attire\">\n                            <option value=\"\">Select Attire</option>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        Select Date:  \n                        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Start Time\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"End Time\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <Button color=\"success\" className=\"mb-2\">\n                        <IntlMessages id=\"Save\" />\n                    </Button>\n                </Colxx>\n            </Row>\n        </Colxx>\n      </Row>\n    )\n}\n\nexport default FirstFormEvents;","import React, { useEffect, useState } from 'react';\nimport { Row } from 'reactstrap';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport { Steps } from 'rsuite';\nimport FirstFormEvents from './firstFormEvents';\nimport SecondFormEvents  from './secondFormEvents';\nimport { getAllCompanies, getApartments, getContactApartment, getContactsCompanie } from 'helpers/services/companyServices';\n\nconst CreateEvent = ({ match }) => {\n\tconst [idCompanie, setIdCompanie] = useState(0);\n\tconst [nameOfEvent, setNameOfEvent] = useState(\"\");\n\tconst [idDepartment, setIdDepartment] = useState(0);\n\tconst [existBeoNumber, setExistBeoNumber] = useState(false);\n\tconst [beoNumber, setBeoNumber] = useState(\"\");\n\tconst [useContactForApartment, setUseContactForApartment] = useState(false);\n\tconst [idContact, setIdContact] = useState(0);\n\tconst [contactName, setContactName] = useState(\"\");\n\tconst [contactPhoneNumber, setContactPhoneNumber] = useState(\"\");\n\tconst [description, setDescription] = useState(\"\");\n\tconst [howEnterLocation, setHowEnterLocation] = useState(\"\");\n\tconst [companies, setCompanies] = useState([]);\n\tconst [apartments, setApartments] = useState([]);\n\tconst [contacts, setContacts] = useState([]);\n    const [step, setStep] = useState(0);\n\n\tconst callAllCompanies = async () => {\n\t\ttry {\n\t\t\tconst companies = await getAllCompanies();\n\t\t\tsetCompanies(companies.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(\"ERR GET COMPANIES => \", err);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconst callApartmentsForCompanie = async (idCompanie) => {\n\t\ttry {\n\t\t\tconst dataApartments = await getApartments(idCompanie);\n\t\t\tsetApartments(dataApartments.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(\"ERROR IN CALL APARTMENTS => \", err);\n\t\t}\n\t\treturn;\n\t}\n\n\tconst callContactsForCompanie = async (idCompanie, departmentContacts = []) => {\n\t\ttry {\n\t\t\tsetContacts([]);\n\t\t\tconst dataContacts = await getContactsCompanie(idCompanie);\n\t\t\tconst newContacts = [\n\t\t\t\t...dataContacts.data,\n\t\t\t\t...departmentContacts,\n\t\t\t]; \n\n\t\t\tsetContacts(newContacts);\n\t\t} catch (err) {\n\t\t\tconsole.log(\"ERROR CALL CONTACTS OF COMPANIE => \", err);\n\t\t}\n\t\treturn;\n\t}\n\t\n\tconst callContactsForApartment = async (idApartment) => {\n\t\ttry { \n\t\t\tconst dataContactForApartment = await getContactApartment(idApartment);\n\t\t\tawait callContactsForCompanie(idCompanie, dataContactForApartment);\n\t\t} catch (err) {\n\t\t\tconsole.log(\"ERROR CALL CONTACTS FOR APARTMENT => \", err);\n\t\t}\n\t\treturn;\n\t}  \n\n\tconst saveData = (dataValue, type) => {\n\t\tconst selectOption = {\n\t\t\tidCompanie: value => {\n\t\t\t\tsetIdCompanie(value);\n\t\t\t\tcallApartmentsForCompanie(value);\n\t\t\t},\n\t\t\tnameEvent: value => setNameOfEvent(value),\n\t\t\tidApartment: value => {\n\t\t\t\tsetIdDepartment(value);\n\t\t\t\tcallContactsForApartment(value);\n\t\t\t},\n\t\t\texistBeoNumber: value => setExistBeoNumber(value),\n\t\t\tbeoNumber: value => setBeoNumber(value),\n\t\t\tuseContactForApartment: value => setUseContactForApartment(value),\n\t\t\tidContact: value => setIdContact(value),\n\t\t\tcontactName: value => setContactName(value),\n\t\t\tcontactPhone: value => setContactPhoneNumber(value),\n\t\t\tdescription: value => setDescription(value),\n\t\t\tHowEnterLocation: value => setHowEnterLocation(value),\n\t\t};\n\t\tselectOption[type](dataValue);\n\t}\n\t\n\tconst normalizeData = () => {\n\t\tconst data = {\n\t\t\t\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\t(async () => {\n\t\t\tawait callAllCompanies();\n\t\t})()\n\t},[])\n    const changeStep = ()=>{\n        setStep(1);\n    }\n    return (\n    <>\n\t\t<Row>\n\t\t\t<Colxx xxs=\"12\">\n\t\t\t\t<Steps current={step}>\n\t\t\t\t\t<Steps.Item />\n\t\t\t\t\t<Steps.Item />\n\t\t\t\t</Steps>\n\t\t\t\t<Separator className=\"mb-5\" />\n\t\t\t</Colxx>\n\t\t</Row>\n\t\t{step === 0 && (\n\t\t\t<FirstFormEvents \n\t\t\t\tchangeStep={changeStep} \n\t\t\t\tcompanies={companies} \n\t\t\t\tsaveData={saveData} \n\t\t\t\tapartments={apartments} \n\t\t\t\tcontacts={contacts} />\n\t\t)}\n\t\t{step === 1 && (\n\t\t\t<SecondFormEvents />\n\t\t)}\n    </>\n  );\n};\n\nexport default CreateEvent;\n","import React, { useState } from \"react\";\nimport { Row, InputGroup, Input, Button } from \"reactstrap\";\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport DatePicker from \"react-datepicker\";\n\nexport default function FormExperience (props) {\n    const { idExperience, deleteExperience } = props;\n    const [startDate, setStartDate] = useState(new Date());\n\n    return(\n        <Row>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                <InputGroup>\n                    <Input placeholder=\"Organization Name\" />\n                </InputGroup>\n            </Colxx>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                <InputGroup>\n                    <Input placeholder=\"Address\" />\n                </InputGroup>\n            </Colxx>\n            <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    From:\n                    <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                </InputGroup>\n            </Colxx>\n            <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    To:\n                    <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                </InputGroup>\n            </Colxx>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    <Input type=\"checkbox\" aria-label=\"Select all roles\" />\n                    I am still working here\n                </InputGroup>\n            </Colxx>\n            <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                <Button color=\"danger\" className=\"mb-2\" onClick={()=> deleteExperience(idExperience)}>\n                    <IntlMessages id=\"Delete Experience\"/>\n                </Button>\n            </Colxx>\n        </Row>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Row, InputGroup, Input, Button, InputGroupAddon, CustomInput, } from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport DatePicker from \"react-datepicker\";\nimport { Steps } from 'rsuite';\nimport FormExperience from './formExperience';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addEmployee } from 'helpers/services/employeesServices';\n\nconst validateEmail = (value) => {\n    let error;\n    if (!value) {\n      error = 'Please enter your email address';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n    return error;\n  };\n\nconst EmployeesForm = ({ getEmployees }) => {\n    const [name, setName] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [role, setRole] = useState(\"\");\n    const [skillLevel, setSkillLevel] = useState(\"\");\n    const [experience, setExperience] = useState(\"\");\n    const [ssn, setSsn] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [zipCode, setZipCode] = useState(\"\");\n    const [perHourCharges, setPerHourCharges] = useState(\"\");\n    const [martialStatus, setMartialStatus] = useState(\"\");\n    const [gender, setGender] = useState(\"\");\n    const [haveADependents, setHaveADependents] = useState(false);\n    const [dateBirth, setDateBirth] = useState(new Date());\n    const [englishLevel, setEnglishLevel] = useState(\"\");\n    const [dateOfHiring, setDateOfHiring] = useState(new Date());\n    const [healtInsurance, setHealtInsurance] = useState(\"\");\n    const [experienceInCompanies, setExperienceInCompanies] = useState([]);\n    const [dependensMinors, setDependensMinors] = useState(0);\n    const [dependensMayors, setDependensMayors] = useState(0);\n    const [emergency_contact_name, setEmergencyContactName] = useState(\"\");\n    const [emergency_contact_phone, setEmergencyContactPhone] = useState(\"\");\n    const [sendData, setSendData] = useState(false);\n    const [idExperience,setIdExperience] = useState(0);\n    const [step, setStep] = useState(0);\n    const [validationOfEmail, setValidationOfEmail] = useState(undefined);\n    const [errors, setErros] = useState({\n        email: \"\"\n    });\n    const [responseSave, setResponseSave] = useState(\"\");\n\n    const changeStep = (type)=>{\n        if(type === \"back\"){\n            setStep(0);\n        } else {\n            setStep(1);\n        }\n    }\n\n    const saveData = (dataValue, type) => {\n        const options = {\n            name: (value) => setName(value),\n            lastname: (value) => setLastname(value),\n            email: (value) => {\n                setEmail(value);\n                const validation = validateEmail(value);\n                if(validation) {\n                    setValidationOfEmail(false);\n                    setErros({\n                        ...errors,\n                        email: validation,\n                    })\n                } else {\n                    setValidationOfEmail(true);\n                }\n\n            },\n            phone: (value) => setPhone(value),\n            address: (value) => setAddress(value),\n            role: (value) => setRole(value),\n            skillLevel: (value) => setSkillLevel(value),\n            experience: (value) => setExperience(value),\n            ssn: (value) => setSsn(value),\n            city: (value) => setCity(value),\n            zipCode: (value) => setZipCode(value),\n            perHourCharges: (value) => setPerHourCharges(value),\n            martialStatus: (value) => setMartialStatus(value),\n            gender: value => setGender(value),\n            dateBirth: value => setDateBirth(value),\n            englishLevel: value => setEnglishLevel(value),\n            dateOfHiring: value => setDateOfHiring(value),\n            healthInsurance: value => setHealtInsurance(value),\n            dependensMinors: value => setDependensMinors(value),\n            dependensMayors: value => setDependensMayors(value),\n            emergencyContactName: value => setEmergencyContactName(value),\n            emergencyContactPhone: value => setEmergencyContactPhone(value),\n            haveADependents: value => setHaveADependents(value),\n            sendData: () => setSendData(true),\n        };\n        options[type](dataValue);\n    }\n\n    useEffect(() => {\n\n    },[sendData])\n\n\n    const addMoreExperience = () => {\n        const newIdExperience = idExperience+1;\n        const newExperience = [\n            ...experienceInCompanies,\n            {\n                organizationName: \"\",\n                organizationAddress: \"\",\n                from: \"\",\n                to: \"\",\n                iAmStillWorkingHere: false,\n                idExperience: newIdExperience\n            }\n        ];\n        setIdExperience(newIdExperience);\n        setExperienceInCompanies([]);\n        setExperienceInCompanies(newExperience);\n    }\n\n    const deleteExperience = (idExperience) => {\n        const newExperienceInCompanies = [\n            ...experienceInCompanies\n        ]\n        setExperienceInCompanies([]);\n        const indexOfExperience = newExperienceInCompanies\n        .map((data) => data.idExperience)\n        .indexOf(idExperience);\n        if (indexOfExperience > -1) {\n            newExperienceInCompanies.splice(indexOfExperience, 1);\n        }\n        setExperienceInCompanies(newExperienceInCompanies);\n    }\n\n    const writeDataExperience = (idExperience, data, value) => {\n        let newExperiences = [\n            ...experienceInCompanies\n        ]\n        setExperienceInCompanies([])\n        newExperiences = newExperiences.map((obj) => {\n            if (obj.idExperience === idExperience) {\n                return { \n                    ...obj, \n                    [value]: data\n                };\n            }\n\n            return obj;\n        });\n        setExperienceInCompanies(newExperiences);\n    }\n\n    const normalizeDate = (date) => {\n        const getDate = new Date(date);\n        const getDay = getDate.getDate();\n        const getMonth = getDate.getMonth();\n        const getYear = getDate.getFullYear();\n        return `${getYear}-${getMonth}-${getDay}`;\n    }\n    const saveEmployee = async () => {\n        const newEmployee = {\n            data: {\n\n                name_employee: name,\n                lastname_employee: lastname,\n                email_employee: email,\n                phone_employee: phone,\n                address_employee: address,\n                role_employee: role,\n                skill_level: skillLevel,\n                experience,\n                ssn_employee: ssn,\n                city_employee: city,\n                zip_code: zipCode,\n                per_hour_charge: perHourCharges,\n                martial_status: martialStatus,\n                gender,\n                date_of_birth: normalizeDate(dateBirth),\n                dependensMinors,\n                dependensMayors,\n                englishLevel,\n                dateOfHiring: normalizeDate(dateOfHiring),\n                healtInsurance,\n                emergency_contact_name,\n                emergency_contact_phone,\n                haveDependents: haveADependents\n            },\n            organizations: [],\n        }\n        const response = await addEmployee(newEmployee);\n        await getEmployees();\n    }\n    let validateDisabledRoles = role === \"all\" ? true : false;\n    const disabledRoles = {\n        disabled: validateDisabledRoles\n    }\n    const checkedRole = {\n        checked : validateDisabledRoles,\n    }\n    const checkedDependents = {\n        checked: haveADependents\n    }\n    const formOne = (\n        <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <Separator className=\"mb-5\" />\n        </Colxx>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Employee Name\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input defaultValue={name} onChange={({target}) => saveData(target.value, \"name\")} />\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Employee lastname\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input defaultValue={name} onChange={({target}) => saveData(target.value, \"lastname\")} />\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Email Address\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input defaultValue={name} onChange={({target}) => saveData(target.value, \"email\")} />\n                            </Colxx>\n                        </Row>\n                        {validationOfEmail === false && (\n\t\t\t\t\t\t\t\t<div className=\"invalid-feedback d-block\">\n\t\t\t\t\t\t\t\t\t{errors.email}\n\t\t\t\t\t\t\t\t</div>\n                        )}\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"checkbox\" {...checkedRole} aria-label=\"Select all roles\" onChange={({target}) => {\n                            if (target.checked) {\n                                saveData(\"all\", \"role\")\n                                saveData(\"Skilled\", \"skillLevel\");\n                            } else {\n                                saveData(\"\",\"role\");\n                                saveData(\"\", \"skillLevel\");\n                            }\n                        }\n                            }/>\n                        Select all roles\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"Companies Selection\" onChange={({target}) => {saveData(target.value, \"role\")}} {...disabledRoles}>\n                            <option value=\"\">Select Role</option>\n                            <option>Administrative</option>\n                            <option>Chieff</option>\n                            <option>Bartender</option>\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"select\" placeholder=\"Companies Selection\" onChange={({target}) => saveData(target.value, \"skillLevel\")} {...disabledRoles} >\n                            <option value=\"\">Skill level</option>\n                            <option>Beginner</option>\n                            <option>Pro</option>\n                            <option>Skilled</option>\n                        </Input>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Experience\" defaultValue={experience} onChange={({target}) => saveData(target.value, \"experience\")}/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Phone\" defaultValue={phone} onChange={({target}) => saveData(target.value, \"phone\")} type=\"number\" />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Address\" defaultValue={address} onChange={({target}) => saveData(target.value, \"address\")}/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"SSN No.\" defaultValue={ssn} onChange={({target}) => saveData(target.value, \"ssn\")} type=\"number\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"City/Location\" defaultValue={city} onChange={({target}) => saveData(target.value, \"city\")}/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Zip Code\" defaultValue={zipCode} onChange={({target}) => saveData(target.value, \"zipCode\")} type=\"number\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Per Hour Charges\" defaultValue={perHourCharges} onChange={({target}) => saveData(target.value,\"perHourCharges\")} type=\"number\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className='mb-3'>\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Martial Status\n                            </Colxx>\n                            <Colxx xxs=\"6\">\n                                <InputGroup size=\"sm\" className=\"mb-3\">\n                                    <Input type=\"radio\" aria-label=\"Single\" onChange={() => saveData(\"single\",\"martialStatus\")}/>\n                                    Single\n                                </InputGroup>\n                            </Colxx>\n                            <Colxx xxs=\"6\">\n                                <InputGroup size=\"sm\" className=\"mb-3\">\n                                    <Input type=\"radio\" aria-label=\"Married\" onChange={() => saveData(\"married\",\"lastname\")}/>\n                                    Married\n                                </InputGroup>\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\"> \n                            <Row>\n                                <Colxx xxs=\"12\">\n                                    Gender\n                                </Colxx>\n                                <Colxx xxs=\"4\">\n                                    <InputGroup size=\"sm\" className=\"mb-3\">\n                                        <Input type=\"radio\" aria-label=\"Female\" onChange={() => saveData(\"female\",\"gender\")}/>\n                                        Female\n                                    </InputGroup>\n                                </Colxx>\n                                <Colxx xxs=\"4\">\n                                    <InputGroup size=\"sm\" className=\"mb-3\">\n                                        <Input type=\"radio\" aria-label=\"Male\" onChange={() => saveData(\"male\",\"gender\")}/>\n                                        Male\n                                    </InputGroup>\n                                </Colxx>\n                                <Colxx xxs=\"4\">\n                                    <InputGroup size=\"sm\" className=\"mb-3\">\n                                        <Input type=\"radio\" aria-label=\"Other\" onChange={() => saveData(\"other\",\"gender\")}/>\n                                        Other\n                                    </InputGroup>   \n                                </Colxx>\n                            </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input type=\"checkbox\" {...checkedDependents} aria-label=\"Do you have dependents?\" onChange={({target}) => {\n                            if (target.checked) {\n                                saveData(true, \"haveADependents\")\n                            } else {\n                                saveData(false,\"haveADependents\");\n                            }\n                        }\n                            }/>\n                        Do you have dependents?\n                    </InputGroup>\n                </Colxx>\n                { haveADependents && (\n                    <>\n                        <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                            <InputGroup size=\"sm\" className=\"mb\">\n                                <Row>\n                                    <Colxx xxs=\"12\">\n                                        Dependents Minors\n                                    </Colxx>\n                                    <Colxx xxs=\"12\">\n                                        <Input type=\"number\" onChange={({target})=> saveData(target.value, \"dependensMinors\")} />\n                                    </Colxx>\n                                </Row>\n                            </InputGroup>\n                        </Colxx>\n                        <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                            <InputGroup size=\"sm\" className=\"mb\">\n                                <Row>\n                                    <Colxx xxs=\"12\">\n                                        Dependents Mayors\n                                    </Colxx>\n                                    <Colxx xxs=\"12\">\n                                        <Input type=\"number\" onChange={({target})=> saveData(target.value, \"dependensMayors\")} />\n                                    </Colxx>\n                                </Row>\n                            </InputGroup>\n                        </Colxx>\n                    </>\n                )}\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        Date of birth: \n                        <DatePicker selected={dateBirth} onChange={(date) => saveData(date,\"dateBirth\")} />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        Date of Hiring:\n                        <DatePicker selected={dateOfHiring} onChange={(date) => saveData(date,\"dateOfHiring\")} />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                English Level\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input onChange={({target}) => saveData(target.value,\"englishLevel\")}/>\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">Upload certification and vaccine</InputGroupAddon>\n                        <CustomInput\n                        type=\"file\"\n                        id=\"exampleCustomFileBrowser1\"\n                        name=\"customFile\"\n                        />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">Upload photo</InputGroupAddon>\n                        <CustomInput\n                        type=\"file\"\n                        id=\"exampleCustomFileBrowser1\"\n                        name=\"customFile\"\n                        />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Health Insurance\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input onChange={({target})=> saveData(target.value,\"healthInsurance\")}/>\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Emergency Contact Name\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input type=\"number\" onChange={({target})=> saveData(target.value, \"emergencyContactName\")} />\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb\">\n                        <Row>\n                            <Colxx xxs=\"12\">\n                                Emergency Contact Phone\n                            </Colxx>\n                            <Colxx xxs=\"12\">\n                                <Input type=\"number\" onChange={({target})=> saveData(target.value, \"emergencyContactPhone\")} />\n                            </Colxx>\n                        </Row>\n                    </InputGroup>\n                </Colxx>\n            </Row>\n            <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                <Button color=\"success\" className=\"mb-2\" onClick={()=>changeStep(\"next\")}>\n                    <IntlMessages id=\"button.success\"/>\n                </Button>\n            </Colxx>\n        </Colxx>\n      </Row>\n        </>\n    )\n\n    const formTwo = (\n            <Row>\n                {experienceInCompanies.map(data => <FormExperience {...data} deleteExperience={deleteExperience} />)}\n                <Colxx xxs=\"12\" className=\"mb-4\">    \n                    <Button color=\"success\" className=\"mb-2\" onClick={addMoreExperience} >\n                        <IntlMessages id=\"Add more experience\"/>\n                    </Button>\n                </Colxx>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">Upload resume</InputGroupAddon>\n                        <CustomInput\n                        type=\"file\"\n                        id=\"exampleCustomFileBrowser1\"\n                        name=\"customFile\"\n                        />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" className=\"mb-4\">  \n                    <Button color=\"danger\" className=\"mb-2\" onClick={()=>changeStep(\"back\")}>\n                        <IntlMessages id=\"Back\"/>\n                    </Button>  \n                    <Button color=\"success\" className=\"mb-2\" onClick={saveEmployee}>\n                        <IntlMessages id=\"Guardar\"/>\n                    </Button>\n                </Colxx>\n                <Colxx xxs=\"12\" className=\"mb4\">\n                    <div>\n                        \n                    </div>\n                </Colxx>\n            </Row>\n    )\n  return (\n    <>\n        <Row>\n            <Colxx xxs=\"12\">\n                <Steps current={step}>\n                    <Steps.Item />\n                    <Steps.Item />\n                </Steps>\n            </Colxx>\n        </Row>\n\n        {step === 0 && (\n            formOne\n        )}\n        {step === 1 && (\n            formTwo\n        )}\n    </>\n  );\n};\n\nexport default EmployeesForm;\n","import React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nconst Components = React.lazy(() =>\n  import(/* webpackChunkName: \"forms-components\" */ './components')\n);\nconst Layouts = React.lazy(() =>\n  import(/* webpackChunkName: \"forms-layouts\" */ './layouts')\n);\nconst Validations = React.lazy(() =>\n  import(/* webpackChunkName: \"forms-validations\" */ './validations')\n);\nconst Wizard = React.lazy(() =>\n  import(/* webpackChunkName: \"forms-wizard\" */ './wizard')\n);\n\nconst Forms = ({ match }) => (\n  <Suspense fallback={<div className=\"loading\" />}>\n    <Switch>\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/components`} />\n      <Route\n        path={`${match.url}/components`}\n        render={(props) => <Components {...props} />}\n      />\n      <Route\n        path={`${match.url}/layouts`}\n        render={(props) => <Layouts {...props} />}\n      />\n      <Route\n        path={`${match.url}/validations`}\n        render={(props) => <Validations {...props} />}\n      />\n      <Route\n        path={`${match.url}/wizard`}\n        render={(props) => <Wizard {...props} />}\n      />\n      <Redirect to=\"/error\" />\n    </Switch>\n  </Suspense>\n);\nexport default Forms;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { adminRoot } from 'constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { Row, InputGroup, Input, Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nconst DetailsEmployee = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.employees\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Name: </b> Mark\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Lastname: </b> Otto\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Username: </b> @Otto \n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Street: </b> Street 57 Lt\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>City: </b> Chicago\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>ST: </b> Test\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Zip Code: </b> 00045\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Gender: </b> M\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Date of birth: </b> 10/12/99\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>SSN: </b> 09929939391239\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>English Level: </b> B1\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <Button color=\"success\" className=\"mb-2\">\n                        <IntlMessages id=\"View Certificate of vaccinate\" />\n                    </Button>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Date of hire: </b> 10/12/21\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Picture: </b> \n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Heal Insurance: </b> \n                </Colxx>\n            </Row>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default DetailsEmployee;\n","import React, {useState} from 'react';\nimport { Row, InputGroup, Input, Button, InputGroupAddon, CustomInput} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst EditEmployee = ({ match }) => {\n    const [startDate, setStartDate] = useState(new Date());\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.employees\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Row>\n\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Name\" value=\"Otto\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Last Name\" value=\"Otto\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Email\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Street Name\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"City\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"State\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Zip Code\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Gender\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        Date of birth: \n                        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"SSN\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"English Level\"/>\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">Upload certification and vaccine</InputGroupAddon>\n                        <CustomInput\n                        type=\"file\"\n                        id=\"exampleCustomFileBrowser1\"\n                        name=\"customFile\"\n                        />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        Date of Hiring:\n                        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">Upload photo</InputGroupAddon>\n                        <CustomInput\n                        type=\"file\"\n                        id=\"exampleCustomFileBrowser1\"\n                        name=\"customFile\"\n                        />\n                    </InputGroup>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <InputGroup size=\"sm\" className=\"mb-3\">\n                        <Input placeholder=\"Healt Insurance\"/>\n                    </InputGroup>\n                </Colxx>\n            </Row>\n            <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                <Button color=\"success\" className=\"mb-2\">\n                    <IntlMessages id=\"Save\" />\n                </Button>\n            </Colxx>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default EditEmployee;\n","import React from 'react';\nimport { Row, Table,Button, InputGroup, Input} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nconst ViewEmployees = ({ match }) => {\n\tconst sendToDetails = () => {\n\t\twindow.location.href = \"/app/employees/details\"\n\t}\n\tconst sendToEditEmployee = ()=>{\n\t\twindow.location.href = \"/app/employees/edit\";\n\t}\n  return (\n    <>\n        <Row>\n            <Colxx xxs=\"12\">\n            <Breadcrumb heading=\"menu.employees\" match={match} />\n            <Separator className=\"mb-5\" />\n            </Colxx>\n        </Row>\n        <Row>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                <Row>\n                    <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input type=\"select\" placeholder=\"Department selection\">\n                                <option value=\"\">Select Report</option>\n                                <option>All Employees</option>\n                                <option>Active</option>\n                                <option>Inactive</option>\n                                <option>Terminated</option>\n                                <option>Slick Hours Paid</option>\n                                <option>Holidays</option>\n                                <option>SSN Duplicates Detections</option>\n                                <option>Vacations</option>\n                                <option>Certifications</option>\n                            </Input>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                        <Button color=\"success\" className=\"mb-2\">\n                            <IntlMessages id=\"View Report\" />\n                        </Button>\n                        <Button color=\"success\" className=\"mb-2\">\n                            <IntlMessages id=\"Download Report\" />\n                        </Button>\n                    </Colxx>\n                </Row>\n            </Colxx>\n        </Row>\n        <Row>\n            <Colxx xxs=\"12\" className=\"mb-4\">\n                <h3>Active Employees</h3>\n                <Table striped>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Username</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Mark</td>\n                        <td>Otto</td>\n                        <td>@mdo</td>\n                        <td>\n                            <Button color=\"success\" className=\"mb-2\" onClick={sendToDetails}>\n                                <IntlMessages id=\"View Details\" />\n                            </Button>\n                            <Button color=\"success\" className=\"mb-2\" onClick={sendToEditEmployee}>\n                                <IntlMessages id=\"Edit\" />\n                            </Button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\">2</th>\n                        <td>Yahir</td>\n                        <td>Sep</td>\n                        <td>@Yasep</td>\n                        <td>\n                            <Button color=\"success\" className=\"mb-2\">\n                                <IntlMessages id=\"View Details\" />\n                            </Button>\n                            <Button color=\"success\" className=\"mb-2\">\n                                <IntlMessages id=\"Edit\" />\n                            </Button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </Colxx>\n        </Row>\n    </>\n  );\n};\n\nexport default ViewEmployees;\n","import React, { useState } from 'react';\nimport { Row, Table,Button, Modal, ModalBody} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\nimport CreateEvent from '../create-event';\n\nconst ViewEmployees = ({ match }) => {\n\tconst [modal,setModal] = useState(false);\n\tconst sendToDetails = () => {\n\t\twindow.location.href = \"/app/events/details\"\n\t}\n\tconst sendToEditEmployee = ()=>{\n\t\twindow.location.href = \"/app/events/edit\";\n\t}\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.events\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n\t\t\t\t<Button color=\"success\" className=\"mb-2\" onClick={()=>setModal(true)}>\n\t\t\t\t\t<IntlMessages id=\"+ Add Event\" />\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"success\" className=\"mb-2\">\n\t\t\t\t\t<IntlMessages id=\"View Reports\" />\n\t\t\t\t</Button>\n            </Colxx>\n      </Row>\n      <Modal\n\t\t\tisOpen={modal}\n\t\t\ttoggle={() => setModal(!modal)}\n\t\t>\n\t\t\t<ModalBody>\n\t\t\t\t<CreateEvent />\n\t\t\t</ModalBody>\n        </Modal>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Table striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Companie</th>\n                    <th>Name of the event</th>\n                    <th>Department</th>\n                    <th>Contacts</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Microsft</td>\n                    <td>End Year</td>\n                    <td>Systems</td>\n                    <td>557894144, 43124434, 543545345</td>\n                    <td>\n                        <Button color=\"success\" className=\"mb-2\" onClick={sendToDetails}>\n                            <IntlMessages id=\"View Details\" />\n                        </Button>\n                        <Button color=\"success\" className=\"mb-2\" onClick={sendToEditEmployee}>\n                            <IntlMessages id=\"Edit\" />\n                        </Button>\n                    </td>\n                  </tr>\n                </tbody>\n            </Table>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default ViewEmployees;\n","import React from 'react';\nimport { Row, Table,Button, InputGroup, Input} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nconst ViewEmployees = ({ match }) => {\n\tconst sendToDetails = () => {\n\t\twindow.location.href = \"/app/employees/details\"\n\t}\n\tconst sendToEditEmployee = ()=>{\n\t\twindow.location.href = \"/app/employees/edit\";\n\t}\n  return (\n    <>\n        <Row>\n            <Colxx xxs=\"12\">\n            <Breadcrumb heading=\"menu.employees\" match={match} />\n            <Separator className=\"mb-5\" />\n            </Colxx>\n        </Row>\n        <Row>\n            <Colxx xxs=\"12\" xl=\"12\" className=\"mb-4\">\n                <Row>\n                    <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                        <InputGroup size=\"sm\" className=\"mb-3\">\n                            <Input type=\"select\" placeholder=\"Department selection\">\n                                <option value=\"\">Select Report</option>\n                                <option>Total Positions requested per Event and position</option>\n                                <option>Total Assigned Employees per events</option>\n                                <option>Total Cover</option>\n                                <option>Events per Date/ month </option>\n                                <option>Cover positions</option>\n                            </Input>\n                        </InputGroup>\n                    </Colxx>\n                    <Colxx xxs=\"12\" xl=\"4\" className=\"mb-4\">\n                        <Button color=\"success\" className=\"mb-2\">\n                            <IntlMessages id=\"View Report\" />\n                        </Button>\n                        <Button color=\"success\" className=\"mb-2\">\n                            <IntlMessages id=\"Download Report\" />\n                        </Button>\n                    </Colxx>\n                </Row>\n            </Colxx>\n        </Row>\n        <Row>\n            <Colxx xxs=\"12\" className=\"mb-4\">\n                <h3>Active Events</h3>\n                <Table striped>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Companie</th>\n                        <th>Name of the event</th>\n                        <th>Department</th>\n                        <th>Contacts</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <th scope=\"row\">1</th>\n                        <td>Microsft</td>\n                        <td>End Year</td>\n                        <td>Systems</td>\n                        <td>557894144, 43124434, 543545345</td>\n                        <td>\n                            <Button color=\"success\" className=\"mb-2\" onClick={sendToDetails}>\n                                <IntlMessages id=\"View Details\" />\n                            </Button>\n                            <Button color=\"success\" className=\"mb-2\" onClick={sendToEditEmployee}>\n                                <IntlMessages id=\"Edit\" />\n                            </Button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </Table>\n            </Colxx>\n        </Row>\n    </>\n  );\n};\n\nexport default ViewEmployees;\n","import React from 'react';\nimport { Row, Table, Button} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nconst DetailsEmployee = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.employees\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Row>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Companie: </b> Microsft\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Name of the Event: </b> End of year\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Department: </b> Systems\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Contacts: </b>\n                    <Table striped>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>Data</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td>Type 1</td>\n                                <td>557817131</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Book Event: </b>\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Time of event: </b> 3hours\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Uniform: </b> Gala\n                </Colxx>\n                <Colxx xxs=\"12\" xl=\"6\" className=\"mb-4\">\n                    <b>Equipament: </b> Detail\n                </Colxx>\n            </Row>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default DetailsEmployee;\n"],"sourceRoot":""}