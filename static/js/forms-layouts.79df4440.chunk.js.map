{"version":3,"sources":["views/app/ui/forms/layouts.js","../node_modules/reactstrap/es/CardTitle.js","components/common/CustomSelectInput.js","../node_modules/reactstrap/es/FormText.js"],"names":["selectData","label","value","key","injectIntl","match","intl","useState","selectedOptionLO","setSelectedOptionLO","selectedOptionLT","setSelectedOptionLT","startDateLO","setStartDateLO","startDateLT","setStartDateLT","tagsLO","setTagsLO","tagsLT","setTagsLT","messages","xxs","heading","className","id","for","type","name","placeholder","color","row","sm","check","disabled","onChange","val","inputProps","selected","components","Input","CustomSelectInput","classNamePrefix","options","shouldCloseOnSelect","_excluded","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","CardTitle","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","customProps","autoCorrect","autoCapitalize","children","node","inline","bool","FormText"],"mappings":"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","file":"static/js/forms-layouts.79df4440.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  CardTitle,\n  FormGroup,\n  Label,\n  CustomInput,\n  Button,\n  FormText,\n  Form,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport DatePicker from 'react-datepicker';\nimport TagsInput from 'react-tagsinput';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'rc-switch/assets/index.css';\nimport 'rc-slider/assets/index.css';\nimport 'react-rater/lib/react-rater.css';\n\nimport Select from 'react-select';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport Breadcrumb from 'containers/navs/Breadcrumb';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport CustomSelectInput from 'components/common/CustomSelectInput';\n\nconst selectData = [\n  { label: 'Cake', value: 'cake', key: 0 },\n  { label: 'Cupcake', value: 'cupcake', key: 1 },\n  { label: 'Dessert', value: 'dessert', key: 2 },\n];\n\nconst FormLayoutsUi = ({ match, intl }) => {\n  const [selectedOptionLO, setSelectedOptionLO] = useState('');\n  const [selectedOptionLT, setSelectedOptionLT] = useState('');\n  const [startDateLO, setStartDateLO] = useState(null);\n  const [startDateLT, setStartDateLT] = useState(null);\n  const [tagsLO, setTagsLO] = useState([]);\n  const [tagsLT, setTagsLT] = useState([]);\n\n  const { messages } = intl;\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.form-layouts\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.basic\" />\n              </CardTitle>\n              <Form>\n                <FormGroup>\n                  <Label for=\"exampleEmail\">\n                    <IntlMessages id=\"forms.email\" />\n                  </Label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"exampleEmail\"\n                    placeholder={messages['forms.email']}\n                  />\n                  <FormText color=\"muted\">\n                    <IntlMessages id=\"forms.email-muted\" />\n                  </FormText>\n                </FormGroup>\n\n                <FormGroup>\n                  <Label for=\"passwordBasic\">\n                    <IntlMessages id=\"forms.password\" />\n                  </Label>\n                  <Input\n                    type=\"password\"\n                    name=\"passwordBasic\"\n                    id=\"passwordBasic\"\n                    placeholder={messages['forms.password']}\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <CustomInput\n                    type=\"checkbox\"\n                    id=\"exampleCustomCheckbox\"\n                    label=\"Check this custom checkbox\"\n                  />\n                </FormGroup>\n\n                <Button color=\"primary\" className=\"mt-4\">\n                  <IntlMessages id=\"forms.submit\" />\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.horizontal\" />\n              </CardTitle>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"emailHorizontal\" sm={2}>\n                    <IntlMessages id=\"forms.email\" />\n                  </Label>\n                  <Colxx sm={10}>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"emailHorizontal\"\n                      placeholder={messages['forms.email']}\n                    />\n                  </Colxx>\n                </FormGroup>\n\n                <FormGroup row>\n                  <Label for=\"passwordHorizontal\" sm={2}>\n                    <IntlMessages id=\"forms.password\" />\n                  </Label>\n                  <Colxx sm={10}>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"passwordHorizontal\"\n                      placeholder={messages['forms.password']}\n                    />\n                  </Colxx>\n                </FormGroup>\n\n                <FormGroup row>\n                  <Label sm={2} className=\"pt-0\">\n                    <IntlMessages id=\"forms.radios\" />\n                  </Label>\n                  <Colxx sm={10}>\n                    <FormGroup check>\n                      <Label check>\n                        <Input type=\"radio\" name=\"radio1\" />\n                        <IntlMessages id=\"forms.first-radio\" />\n                      </Label>\n                    </FormGroup>\n                    <FormGroup check>\n                      <Label check>\n                        <Input type=\"radio\" name=\"radio1\" />\n                        <IntlMessages id=\"forms.second-radio\" />\n                      </Label>\n                    </FormGroup>\n                    <FormGroup check disabled>\n                      <Label check>\n                        <Input type=\"radio\" name=\"radio1\" disabled />\n                        <IntlMessages id=\"forms.third-radio-disabled\" />\n                      </Label>\n                    </FormGroup>\n                  </Colxx>\n                </FormGroup>\n\n                <FormGroup row>\n                  <Label sm={2} className=\"pt-0\">\n                    <IntlMessages id=\"forms.checkbox\" />\n                  </Label>\n                  <Colxx sm={10}>\n                    <FormGroup check>\n                      <Label check>\n                        <Input type=\"checkbox\" name=\"check1\" /> Example\n                        <IntlMessages id=\"forms.checkbox\" />\n                      </Label>\n                    </FormGroup>\n                  </Colxx>\n                </FormGroup>\n\n                <Button color=\"primary\">\n                  <IntlMessages id=\"forms.signin\" />\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.top-labels-over-line\" />\n              </CardTitle>\n\n              <Form>\n                <Label className=\"form-group has-float-label\">\n                  <Input type=\"email\" />\n                  <span>\n                    <IntlMessages id=\"forms.email\" />\n                  </span>\n                </Label>\n                <Label className=\"form-group has-float-label\">\n                  <Input type=\"password\" />\n                  <span>\n                    <IntlMessages id=\"forms.password\" />\n                  </span>\n                </Label>\n                <div className=\"form-group has-float-label\">\n                  <TagsInput\n                    value={tagsLO}\n                    onChange={(val) => setTagsLO(val)}\n                    inputProps={{ placeholder: '' }}\n                  />\n                  <span>\n                    <IntlMessages id=\"forms.tags\" />\n                  </span>\n                </div>\n                <div className=\"form-group has-float-label\">\n                  <DatePicker\n                    selected={startDateLO}\n                    onChange={(val) => setStartDateLO(val)}\n                  />\n                  <span>\n                    <IntlMessages id=\"forms.date\" />\n                  </span>\n                </div>\n\n                <div className=\"form-group has-float-label\">\n                  <Select\n                    components={{ Input: CustomSelectInput }}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    name=\"form-field-name\"\n                    value={selectedOptionLO}\n                    onChange={(val) => setSelectedOptionLO(val)}\n                    options={selectData}\n                    placeholder=\"\"\n                  />\n                  <span>\n                    <IntlMessages id=\"forms.state\" />\n                  </span>\n                </div>\n\n                <Button color=\"primary\">\n                  <IntlMessages id=\"forms.submit\" />\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.top-labels-in-input\" />\n              </CardTitle>\n\n              <Form>\n                <FormGroup className=\"form-group has-top-label\">\n                  <Label>\n                    <IntlMessages id=\"forms.email-u\" />\n                  </Label>\n                  <Input type=\"email\" />\n                </FormGroup>\n\n                <FormGroup className=\"form-group has-top-label\">\n                  <Label>\n                    <IntlMessages id=\"forms.password-u\" />\n                  </Label>\n\n                  <Input type=\"password\" />\n                </FormGroup>\n\n                <FormGroup className=\"form-group has-top-label\">\n                  <Label>\n                    <IntlMessages id=\"forms.tags-u\" />\n                  </Label>\n                  <TagsInput\n                    value={tagsLT}\n                    onChange={(val) => setTagsLT(val)}\n                    inputProps={{ placeholder: '' }}\n                  />\n                </FormGroup>\n                <FormGroup className=\"form-group has-top-label\">\n                  <Label>\n                    <IntlMessages id=\"forms.date-u\" />\n                  </Label>\n                  <DatePicker\n                    shouldCloseOnSelect\n                    selected={startDateLT}\n                    onChange={(val) => setStartDateLT(val)}\n                  />\n                </FormGroup>\n\n                <FormGroup className=\"form-group has-top-label\">\n                  <Label>\n                    <IntlMessages id=\"forms.state-u\" />\n                  </Label>\n                  <Select\n                    components={{ Input: CustomSelectInput }}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    name=\"form-field-name\"\n                    value={selectedOptionLT}\n                    onChange={(val) => setSelectedOptionLT(val)}\n                    options={selectData}\n                    placeholder=\"\"\n                  />\n                </FormGroup>\n\n                <Button color=\"primary\">\n                  <IntlMessages id=\"forms.submit\" />\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"forms.grid\" />\n              </CardTitle>\n              <Form>\n                <FormGroup row>\n                  <Colxx sm={6}>\n                    <FormGroup>\n                      <Label for=\"exampleEmailGrid\">\n                        <IntlMessages id=\"forms.email\" />\n                      </Label>\n                      <Input\n                        type=\"email\"\n                        name=\"exampleEmailGrid\"\n                        id=\"exampleEmailGrid\"\n                        placeholder={messages['forms.email']}\n                      />\n                    </FormGroup>\n                  </Colxx>\n\n                  <Colxx sm={6}>\n                    <FormGroup>\n                      <Label for=\"examplePasswordGrid\">\n                        <IntlMessages id=\"forms.password\" />\n                      </Label>\n                      <Input\n                        type=\"password\"\n                        name=\"examplePasswordGrid\"\n                        id=\"examplePasswordGrid\"\n                        placeholder={messages['forms.password']}\n                      />\n                    </FormGroup>\n                  </Colxx>\n\n                  <Colxx sm={12}>\n                    <FormGroup>\n                      <Label for=\"exampleAddressGrid\">\n                        <IntlMessages id=\"forms.address\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"exampleAddressGrid\"\n                        id=\"exampleAddressGrid\"\n                        placeholder={messages['forms.address']}\n                      />\n                    </FormGroup>\n                  </Colxx>\n\n                  <Colxx sm={12}>\n                    <FormGroup>\n                      <Label for=\"exampleAddress2Grid\">\n                        <IntlMessages id=\"forms.address2\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"exampleAddress2Grid\"\n                        id=\"exampleAddress2Grid\"\n                        placeholder={messages['forms.address']}\n                      />\n                    </FormGroup>\n                  </Colxx>\n\n                  <Colxx sm={6}>\n                    <FormGroup>\n                      <Label for=\"exampleEmailGrid\">\n                        <IntlMessages id=\"forms.city\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"exampleTextGrid\"\n                        id=\"exampleTextGrid\"\n                        placeholder={messages['forms.city']}\n                      />\n                    </FormGroup>\n                  </Colxx>\n\n                  <Colxx sm={4}>\n                    <FormGroup>\n                      <Label>\n                        <IntlMessages id=\"forms.state\" />\n                      </Label>\n                      <Input type=\"select\">\n                        <option>Option 1</option>\n                        <option>Option 2</option>\n                        <option>Option 3</option>\n                        <option>Option 4</option>\n                        <option>Option 5</option>\n                      </Input>\n                    </FormGroup>\n                  </Colxx>\n\n                  <Colxx sm={2}>\n                    <FormGroup>\n                      <Label for=\"exampleZipGrid\">\n                        <IntlMessages id=\"forms.zip\" />\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"exampleZipGrid\"\n                        id=\"exampleZipGrid\"\n                        placeholder={messages['forms.zip']}\n                      />\n                    </FormGroup>\n                  </Colxx>\n                </FormGroup>\n\n                <Button color=\"primary\">\n                  <IntlMessages id=\"forms.signup\" />\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default injectIntl(FormLayoutsUi);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\n\nvar FormText = function FormText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      inline = props.inline,\n      color = props.color,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\nexport default FormText;"],"sourceRoot":""}